---


- set_fact:
    git_is_used: "{{'git@' in django_app_git_url}}"

- set_fact:
    git_is_not_used: "{{ not git_is_used | bool }}"

- name: django | add repo
  sudo_user: '{{ app_user }}'
  git: repo='{{django_app_git_url}}'
       dest='{{project_path}}'
       ssh_opts='-o StrictHostKeyChecking=no'
       version='{{git_branch_name}}'
  register: git_register_var
  notify: restart application
  when: git_is_used

# version - can be a branch name, or a tag name.

- name: django | check requirements.txt
  shell: "echo 'Django==1.7.1' > {{ requirements_file }}"
  args:
    chdir: '{{ project_path }}'
    creates: '{{ requirements_file }}'
  when: git_is_not_used

- name: django | install app requirements.txt
  sudo_user: '{{ app_user }}'
  pip: requirements={{requirements_file}}
       virtualenv={{virtualenv_path}}

- name: django | create new django project
  sudo_user: '{{ app_user }}'
  shell: "{{ virtualenv_path }}/bin/django-admin.py startproject {{ django_application_name }} {{ django_application_name }}"
  args:
    chdir: '{{ app_user_home }}'
    creates: '{{ project_path }}/{{ django_application_name }}/'
  when: git_is_not_used

- name: django | add STATIC_ROOT to django settings.py
  lineinfile: dest={{application_path}}/settings.py
              state=present
              regexp='^STATIC_ROOT'
              line="STATIC_ROOT = '{{ nginx_static_dir }}'"
  when: git_is_not_used

- name: django | install latest version of pip packages
  sudo_user: '{{ app_user }}'
  pip: name={{item}} virtualenv={{virtualenv_path}} state=latest
  with_items:
    - setuptools
    - requests
    - ipython

- name: django | run syncdb and migrate
  django_manage:
    command: '{{item}}'
    app_path: '{{ project_path }}'
    virtualenv: '{{ virtualenv_path }}'
  with_items:
     - syncdb
     - migrate
     - collectstatic
  environment: ENV
